//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SHD.KPSA.Tools.MatFileGenerator.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SHD.KPSA.Tools.MatFileGenerator.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} selected from {1} files ähnelt.
        /// </summary>
        public static string DataGridFilesStatusBarText {
            get {
                return ResourceManager.GetString("DataGridFilesStatusBarText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die auto ähnelt.
        /// </summary>
        public static string MatFileGenCheckBoxAuto {
            get {
                return ResourceManager.GetString("MatFileGenCheckBoxAuto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die inner Frame: ähnelt.
        /// </summary>
        public static string MatFileGenCheckBoxBorderInner {
            get {
                return ResourceManager.GetString("MatFileGenCheckBoxBorderInner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die outer Frame: ähnelt.
        /// </summary>
        public static string MatFileGenCheckBoxBorderOuter {
            get {
                return ResourceManager.GetString("MatFileGenCheckBoxBorderOuter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Color as HEX: ähnelt.
        /// </summary>
        public static string MatFileGenCheckBoxColorHex {
            get {
                return ResourceManager.GetString("MatFileGenCheckBoxColorHex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Color as RGB: ähnelt.
        /// </summary>
        public static string MatFileGenCheckBoxColorRgb {
            get {
                return ResourceManager.GetString("MatFileGenCheckBoxColorRgb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Choose a color: ähnelt.
        /// </summary>
        public static string MatFileGenCheckBoxColorSelection {
            get {
                return ResourceManager.GetString("MatFileGenCheckBoxColorSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Type Glass ähnelt.
        /// </summary>
        public static string MatFileGenCheckBoxGlass {
            get {
                return ResourceManager.GetString("MatFileGenCheckBoxGlass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die mirror ähnelt.
        /// </summary>
        public static string MatFileGenCheckBoxMirror {
            get {
                return ResourceManager.GetString("MatFileGenCheckBoxMirror", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die rauto ähnelt.
        /// </summary>
        public static string MatFileGenCheckBoxRauto {
            get {
                return ResourceManager.GetString("MatFileGenCheckBoxRauto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ref ähnelt.
        /// </summary>
        public static string MatFileGenCheckBoxRef {
            get {
                return ResourceManager.GetString("MatFileGenCheckBoxRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rotate (x/y/z): ähnelt.
        /// </summary>
        public static string MatFileGenCheckBoxRotate {
            get {
                return ResourceManager.GetString("MatFileGenCheckBoxRotate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scale (x/y/z) ähnelt.
        /// </summary>
        public static string MatFileGenCheckBoxScale {
            get {
                return ResourceManager.GetString("MatFileGenCheckBoxScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die shi ähnelt.
        /// </summary>
        public static string MatFileGenCheckBoxShi {
            get {
                return ResourceManager.GetString("MatFileGenCheckBoxShi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create thumb ähnelt.
        /// </summary>
        public static string MatFileGenCheckBoxThumb {
            get {
                return ResourceManager.GetString("MatFileGenCheckBoxThumb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die tra ähnelt.
        /// </summary>
        public static string MatFileGenCheckBoxTra {
            get {
                return ResourceManager.GetString("MatFileGenCheckBoxTra", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings ähnelt.
        /// </summary>
        public static string MatFileGenGroupSettings {
            get {
                return ResourceManager.GetString("MatFileGenGroupSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Thumbnails ähnelt.
        /// </summary>
        public static string MatFileGenGroupThumbnails {
            get {
                return ResourceManager.GetString("MatFileGenGroupThumbnails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die #000000 ähnelt.
        /// </summary>
        public static string MatFileGenHexColorDefault {
            get {
                return ResourceManager.GetString("MatFileGenHexColorDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Colorname: ähnelt.
        /// </summary>
        public static string MatFileGenLabelColorName {
            get {
                return ResourceManager.GetString("MatFileGenLabelColorName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Folder: ähnelt.
        /// </summary>
        public static string MatFileGenLabelThumb {
            get {
                return ResourceManager.GetString("MatFileGenLabelThumb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _2. Solid ähnelt.
        /// </summary>
        public static string MatFileGenTabItemSolid {
            get {
                return ResourceManager.GetString("MatFileGenTabItemSolid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _1. Texture ähnelt.
        /// </summary>
        public static string MatFileGenTabItemTexture {
            get {
                return ResourceManager.GetString("MatFileGenTabItemTexture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 1 ähnelt.
        /// </summary>
        public static string MatFileGenTextBoxInnerSizeDefault {
            get {
                return ResourceManager.GetString("MatFileGenTextBoxInnerSizeDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 2 ähnelt.
        /// </summary>
        public static string MatFileGenTextBoxOuterSizeDefault {
            get {
                return ResourceManager.GetString("MatFileGenTextBoxOuterSizeDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die thumbs ähnelt.
        /// </summary>
        public static string MatFileGenThumbFolderDefault {
            get {
                return ResourceManager.GetString("MatFileGenThumbFolderDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Automatic texture application to a general quadrangular area. ähnelt.
        /// </summary>
        public static string MatFileGenToolTipAuto {
            get {
                return ResourceManager.GetString("MatFileGenToolTipAuto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The settings for the inner frame of the preview image. ähnelt.
        /// </summary>
        public static string MatFileGenToolTipBorderInner {
            get {
                return ResourceManager.GetString("MatFileGenToolTipBorderInner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The settings for the outer frame of the preview image. ähnelt.
        /// </summary>
        public static string MatFileGenToolTipBorderOuter {
            get {
                return ResourceManager.GetString("MatFileGenToolTipBorderOuter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die in pixels ähnelt.
        /// </summary>
        public static string MatFileGenToolTipBorderSize {
            get {
                return ResourceManager.GetString("MatFileGenToolTipBorderSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die For a simple paint the color value can be entered as hex value here. ähnelt.
        /// </summary>
        public static string MatFileGenToolTipColorHex {
            get {
                return ResourceManager.GetString("MatFileGenToolTipColorHex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fill in the color value in the form &quot;#112233&quot;! ähnelt.
        /// </summary>
        public static string MatFileGenToolTipColorHexInput {
            get {
                return ResourceManager.GetString("MatFileGenToolTipColorHexInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die the colorname (without fileextension) ähnelt.
        /// </summary>
        public static string MatFileGenToolTipColorName {
            get {
                return ResourceManager.GetString("MatFileGenToolTipColorName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die For a simple coat of RGB color value can be (from 0 to 255) entered here. ähnelt.
        /// </summary>
        public static string MatFileGenToolTipColorRgb {
            get {
                return ResourceManager.GetString("MatFileGenToolTipColorRgb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die For a simple paint the color value can be selected here. ähnelt.
        /// </summary>
        public static string MatFileGenToolTipColorSelection {
            get {
                return ResourceManager.GetString("MatFileGenToolTipColorSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Describes whether it is a material made of glass. The values 0 and 1 are possible. ähnelt.
        /// </summary>
        public static string MatFileGenToolTipGlass {
            get {
                return ResourceManager.GetString("MatFileGenToolTipGlass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Controls the mirror surface. Values from 0 to 1 are possible. 1 means full mirroring; 0.5 could be used for. Example, for high-gloss front. ähnelt.
        /// </summary>
        public static string MatFileGenToolTipMirror {
            get {
                return ResourceManager.GetString("MatFileGenToolTipMirror", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scaling of the texture on the size of the entire surface. ähnelt.
        /// </summary>
        public static string MatFileGenToolTipRauto {
            get {
                return ResourceManager.GetString("MatFileGenToolTipRauto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The key &quot;ref&quot; specifies the refraction through a positive floating point number. The initial refractive has the value 1.0, and corresponds to the index of refraction in a vacuum. ähnelt.
        /// </summary>
        public static string MatFileGenToolTipRef {
            get {
                return ResourceManager.GetString("MatFileGenToolTipRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rotates the JPG. Interesting here is the Z axis. The values in the X- and Y-axes remain to 0. ähnelt.
        /// </summary>
        public static string MatFileGenToolTipRotate {
            get {
                return ResourceManager.GetString("MatFileGenToolTipRotate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In that case the scaling will change. This is required only when working with textures. The individual values indicate how many times the JPG is represented per meter (values for X, Y and Z). ähnelt.
        /// </summary>
        public static string MatFileGenToolTipScale {
            get {
                return ResourceManager.GetString("MatFileGenToolTipScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The key &quot;shi&quot; specifies the specular exponent by a positive floating point number. The higher is the exponent, the smaller the spreading of the specular highlights. The initial exponent has the value 30.0. ähnelt.
        /// </summary>
        public static string MatFileGenToolTipShi {
            get {
                return ResourceManager.GetString("MatFileGenToolTipShi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Created additionally a thumbnail in the dimensions 50 x 25 pixels. This is stored in the specified folder. ähnelt.
        /// </summary>
        public static string MatFileGenToolTipThumb {
            get {
                return ResourceManager.GetString("MatFileGenToolTipThumb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The key &quot;tra&quot; specifies the transparency of a non-negative floating point number, the &amp; lt; = 1. The value 0.0 represents a complete impermeability; the value of 1.0 means total transparency. The initial value is 0.0. ähnelt.
        /// </summary>
        public static string MatFileGenToolTipTra {
            get {
                return ResourceManager.GetString("MatFileGenToolTipTra", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The operation was canceled before completion! ähnelt.
        /// </summary>
        public static string MessageDialogCancelContent {
            get {
                return ResourceManager.GetString("MessageDialogCancelContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel! ähnelt.
        /// </summary>
        public static string MessageDialogCancelTitle {
            get {
                return ResourceManager.GetString("MessageDialogCancelTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The operation was completed successfully.{0}{0}Now want the files to be displayed? ähnelt.
        /// </summary>
        public static string MessageDialogCompleteContent {
            get {
                return ResourceManager.GetString("MessageDialogCompleteContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Done! ähnelt.
        /// </summary>
        public static string MessageDialogCompleteTitle {
            get {
                return ResourceManager.GetString("MessageDialogCompleteTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The processing is being prepared ... ähnelt.
        /// </summary>
        public static string ProgressDialogPreviewContent {
            get {
                return ResourceManager.GetString("ProgressDialogPreviewContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die There are {0} of {1} files processed. ähnelt.
        /// </summary>
        public static string ProgressDialogRunningContent {
            get {
                return ResourceManager.GetString("ProgressDialogRunningContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A short moment ... ähnelt.
        /// </summary>
        public static string ProgressDialogTitle {
            get {
                return ResourceManager.GetString("ProgressDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Generate &quot;Mat-Files&quot; ähnelt.
        /// </summary>
        public static string TitleMatFileGenerator {
            get {
                return ResourceManager.GetString("TitleMatFileGenerator", resourceCulture);
            }
        }
    }
}
